<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='country_vaccination' inline='true' name='federated.07cq11k1561q5i107jt4909eatdy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_vaccination' name='textscan.0rwzjh50vjg5cg1b35npj0dwiegg'>
            <connection class='textscan' directory='D:/Projects/Github_Projects/Tableau_Projects/Project_4' filename='country_vaccination .csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0rwzjh50vjg5cg1b35npj0dwiegg' name='country_vaccination .csv' table='[country_vaccination #csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='boolean' name='Date Range Selected' ordinal='2' />
            <column datatype='string' name='Excess Mortality' ordinal='3' />
            <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
            <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
            <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
            <column datatype='string' name='Extreme Poverty' ordinal='7' />
            <column datatype='string' name='Female Smokers' ordinal='8' />
            <column datatype='string' name='Hosp Patients' ordinal='9' />
            <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
            <column datatype='string' name='Icu Patients' ordinal='11' />
            <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
            <column datatype='string' name='Iso Code' ordinal='13' />
            <column datatype='string' name='Location' ordinal='14' />
            <column datatype='string' name='Location (copy)' ordinal='15' />
            <column datatype='string' name='Location (geo)' ordinal='16' />
            <column datatype='string' name='Male Smokers' ordinal='17' />
            <column datatype='string' name='New Tests' ordinal='18' />
            <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
            <column datatype='string' name='New Tests Smoothed' ordinal='20' />
            <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
            <column datatype='string' name='Positive Rate' ordinal='22' />
            <column datatype='string' name='Tests Per Case' ordinal='23' />
            <column datatype='string' name='Tests Units' ordinal='24' />
            <column datatype='string' name='Total Tests' ordinal='25' />
            <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
            <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
            <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
            <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
            <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
            <column datatype='real' name='Aged 65 Older' ordinal='31' />
            <column datatype='real' name='Aged 70 Older' ordinal='32' />
            <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
            <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
            <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
            <column datatype='real' name='Gdp Per Capita' ordinal='36' />
            <column datatype='real' name='Handwashing Facilities' ordinal='37' />
            <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
            <column datatype='real' name='Human Development Index' ordinal='39' />
            <column datatype='real' name='Life Expectancy' ordinal='40' />
            <column datatype='real' name='Median Age' ordinal='41' />
            <column datatype='integer' name='New Cases' ordinal='42' />
            <column datatype='real' name='New Cases Per Million' ordinal='43' />
            <column datatype='real' name='New Cases Smoothed' ordinal='44' />
            <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
            <column datatype='integer' name='New Deaths' ordinal='46' />
            <column datatype='real' name='New Deaths Per Million' ordinal='47' />
            <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
            <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
            <column datatype='integer' name='New Vaccinations' ordinal='50' />
            <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
            <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
            <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
            <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
            <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
            <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
            <column datatype='integer' name='People Vaccinated' ordinal='57' />
            <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
            <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
            <column datatype='integer' name='Population' ordinal='60' />
            <column datatype='real' name='Population Density' ordinal='61' />
            <column datatype='real' name='Reproduction Rate' ordinal='62' />
            <column datatype='real' name='Stringency Index' ordinal='63' />
            <column datatype='integer' name='Total Boosters' ordinal='64' />
            <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
            <column datatype='integer' name='Total Cases' ordinal='66' />
            <column datatype='real' name='Total Cases Per Million' ordinal='67' />
            <column datatype='integer' name='Total Deaths' ordinal='68' />
            <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
            <column datatype='integer' name='Total Vaccinations' ordinal='70' />
            <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
            <column datatype='real' name='Vaccinated over Population' ordinal='72' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0rwzjh50vjg5cg1b35npj0dwiegg' name='country_vaccination .csv' table='[country_vaccination #csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='boolean' name='Date Range Selected' ordinal='2' />
            <column datatype='string' name='Excess Mortality' ordinal='3' />
            <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
            <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
            <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
            <column datatype='string' name='Extreme Poverty' ordinal='7' />
            <column datatype='string' name='Female Smokers' ordinal='8' />
            <column datatype='string' name='Hosp Patients' ordinal='9' />
            <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
            <column datatype='string' name='Icu Patients' ordinal='11' />
            <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
            <column datatype='string' name='Iso Code' ordinal='13' />
            <column datatype='string' name='Location' ordinal='14' />
            <column datatype='string' name='Location (copy)' ordinal='15' />
            <column datatype='string' name='Location (geo)' ordinal='16' />
            <column datatype='string' name='Male Smokers' ordinal='17' />
            <column datatype='string' name='New Tests' ordinal='18' />
            <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
            <column datatype='string' name='New Tests Smoothed' ordinal='20' />
            <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
            <column datatype='string' name='Positive Rate' ordinal='22' />
            <column datatype='string' name='Tests Per Case' ordinal='23' />
            <column datatype='string' name='Tests Units' ordinal='24' />
            <column datatype='string' name='Total Tests' ordinal='25' />
            <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
            <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
            <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
            <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
            <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
            <column datatype='real' name='Aged 65 Older' ordinal='31' />
            <column datatype='real' name='Aged 70 Older' ordinal='32' />
            <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
            <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
            <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
            <column datatype='real' name='Gdp Per Capita' ordinal='36' />
            <column datatype='real' name='Handwashing Facilities' ordinal='37' />
            <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
            <column datatype='real' name='Human Development Index' ordinal='39' />
            <column datatype='real' name='Life Expectancy' ordinal='40' />
            <column datatype='real' name='Median Age' ordinal='41' />
            <column datatype='integer' name='New Cases' ordinal='42' />
            <column datatype='real' name='New Cases Per Million' ordinal='43' />
            <column datatype='real' name='New Cases Smoothed' ordinal='44' />
            <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
            <column datatype='integer' name='New Deaths' ordinal='46' />
            <column datatype='real' name='New Deaths Per Million' ordinal='47' />
            <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
            <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
            <column datatype='integer' name='New Vaccinations' ordinal='50' />
            <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
            <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
            <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
            <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
            <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
            <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
            <column datatype='integer' name='People Vaccinated' ordinal='57' />
            <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
            <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
            <column datatype='integer' name='Population' ordinal='60' />
            <column datatype='real' name='Population Density' ordinal='61' />
            <column datatype='real' name='Reproduction Rate' ordinal='62' />
            <column datatype='real' name='Stringency Index' ordinal='63' />
            <column datatype='integer' name='Total Boosters' ordinal='64' />
            <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
            <column datatype='integer' name='Total Cases' ordinal='66' />
            <column datatype='real' name='Total Cases Per Million' ordinal='67' />
            <column datatype='integer' name='Total Deaths' ordinal='68' />
            <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
            <column datatype='integer' name='Total Vaccinations' ordinal='70' />
            <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
            <column datatype='real' name='Vaccinated over Population' ordinal='72' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Range Selected</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Date Range Selected]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Date Range Selected</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Excess Mortality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative Absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative Absolute]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative Absolute</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative Per Million</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Extreme Poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Extreme Poverty]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Extreme Poverty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female Smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Female Smokers]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Female Smokers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hosp Patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hosp Patients]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Hosp Patients</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hosp Patients Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hosp Patients Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Hosp Patients Per Million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Icu Patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Icu Patients]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Icu Patients</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Icu Patients Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Icu Patients Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Icu Patients Per Million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Iso Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Iso Code]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Iso Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (copy)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location (copy)]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Location (copy)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (geo)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location (geo)]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Location (geo)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male Smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Male Smokers]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Male Smokers</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Tests</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Per Thousand]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Tests Per Thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Smoothed]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Tests Smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Smoothed Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Smoothed Per Thousand]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Tests Smoothed Per Thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Positive Rate]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Positive Rate</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests Per Case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tests Per Case]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Tests Per Case</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests Units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tests Units]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Tests Units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total Tests Per Thousand]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Tests Per Thousand</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Hosp Admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Hosp Admissions]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Weekly Hosp Admissions</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Hosp Admissions Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Hosp Admissions Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Weekly Hosp Admissions Per Million</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Icu Admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Icu Admissions]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Weekly Icu Admissions</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Icu Admissions Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Icu Admissions Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Weekly Icu Admissions Per Million</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aged 65 Older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aged 65 Older]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Aged 65 Older</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aged 70 Older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aged 70 Older]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Aged 70 Older</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cardiovasc Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cardiovasc Death Rate]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Cardiovasc Death Rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes Prevalence]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Diabetes Prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fully Vaccinated over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fully Vaccinated over Population]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Fully Vaccinated over Population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gdp Per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gdp Per Capita]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Gdp Per Capita</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Handwashing Facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Handwashing Facilities]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Handwashing Facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Per Thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital Beds Per Thousand]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Hospital Beds Per Thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Human Development Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Human Development Index]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Human Development Index</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Median Age</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Cases Per Million</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Smoothed]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Cases Smoothed</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Smoothed Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Smoothed Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Cases Smoothed Per Million</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Deaths Per Million</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Smoothed]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Deaths Smoothed</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Smoothed Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Smoothed Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Deaths Smoothed Per Million</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Vaccinations</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Vaccinations over Population]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Vaccinations over Population</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations Smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations Smoothed]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Vaccinations Smoothed</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations Smoothed Per Million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations Smoothed Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>New Vaccinations Smoothed Per Million</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Not Vaccinated over Population </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Not Vaccinated over Population ]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Not Vaccinated over Population </remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Fully Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People Fully Vaccinated]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>People Fully Vaccinated</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Fully Vaccinated Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Fully Vaccinated Per Hundred]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>People Fully Vaccinated Per Hundred</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People Vaccinated]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>People Vaccinated</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated over Population (delta)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Vaccinated over Population (delta)]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>People Vaccinated over Population (delta)</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Vaccinated Per Hundred]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>People Vaccinated Per Hundred</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Density]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Population Density</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reproduction Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Reproduction Rate]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Reproduction Rate</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stringency Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stringency Index]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Stringency Index</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Boosters]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Boosters</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Boosters Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Boosters Per Hundred]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Boosters Per Hundred</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Cases Per Million</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Per Million]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Deaths Per Million</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Vaccinations]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Vaccinations</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Vaccinations Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Vaccinations Per Hundred]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Total Vaccinations Per Hundred</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vaccinated over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vaccinated over Population]</local-name>
            <parent-name>[country_vaccination .csv]</parent-name>
            <remote-alias>Vaccinated over Population</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Share of people partially vaccinated over population' datatype='real' name='[Calculation_293296961025843200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([People Fully Vaccinated]) / MAX([Population])' />
      </column>
      <column caption='Share of people not vaccinated over population' datatype='real' name='[Calculation_293296961027051521]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - [Calculation_293296961025843200]' />
      </column>
      <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Date]' />
      </column>
      <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Not Vaccinated over Population' datatype='real' name='[Not Vaccinated over Population ]' role='measure' type='quantitative' />
      <column caption='Share of people Fully vaccinated over population' datatype='real' name='[Share of people partially vaccinated over population (copy)_966022156118286336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([People Vaccinated]) / MAX([Population])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='country_vaccination .csv' datatype='table' name='[__tableau_internal_object_id__].[country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_293296961025843200]' derivation='User' name='[usr:Calculation_293296961025843200:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Share of people partially vaccinated over population (copy)_966022156118286336]' derivation='User' name='[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07cq11k1561q5i107jt4909eatdy]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Continent' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Date Range Selected' />
        <field-sort-custom-order field='Excess Mortality' />
        <field-sort-custom-order field='Excess Mortality Cumulative' />
        <field-sort-custom-order field='Excess Mortality Cumulative Absolute' />
        <field-sort-custom-order field='Excess Mortality Cumulative Per Million' />
        <field-sort-custom-order field='Extreme Poverty' />
        <field-sort-custom-order field='Female Smokers' />
        <field-sort-custom-order field='Hosp Patients' />
        <field-sort-custom-order field='Hosp Patients Per Million' />
        <field-sort-custom-order field='Icu Patients' />
        <field-sort-custom-order field='Icu Patients Per Million' />
        <field-sort-custom-order field='Iso Code' />
        <field-sort-custom-order field='Location' />
        <field-sort-custom-order field='Location (copy)' />
        <field-sort-custom-order field='Location (geo)' />
        <field-sort-custom-order field='Male Smokers' />
        <field-sort-custom-order field='New Tests' />
        <field-sort-custom-order field='New Tests Per Thousand' />
        <field-sort-custom-order field='New Tests Smoothed' />
        <field-sort-custom-order field='New Tests Smoothed Per Thousand' />
        <field-sort-custom-order field='Positive Rate' />
        <field-sort-custom-order field='Tests Per Case' />
        <field-sort-custom-order field='Tests Units' />
        <field-sort-custom-order field='Total Tests' />
        <field-sort-custom-order field='Total Tests Per Thousand' />
        <field-sort-custom-order field='Weekly Hosp Admissions' />
        <field-sort-custom-order field='Weekly Hosp Admissions Per Million' />
        <field-sort-custom-order field='Weekly Icu Admissions' />
        <field-sort-custom-order field='Weekly Icu Admissions Per Million' />
        <field-sort-custom-order field='Aged 65 Older' />
        <field-sort-custom-order field='Aged 70 Older' />
        <field-sort-custom-order field='Cardiovasc Death Rate' />
        <field-sort-custom-order field='Diabetes Prevalence' />
        <field-sort-custom-order field='Fully Vaccinated over Population' />
        <field-sort-custom-order field='Gdp Per Capita' />
        <field-sort-custom-order field='Handwashing Facilities' />
        <field-sort-custom-order field='Hospital Beds Per Thousand' />
        <field-sort-custom-order field='Human Development Index' />
        <field-sort-custom-order field='Life Expectancy' />
        <field-sort-custom-order field='Median Age' />
        <field-sort-custom-order field='New Cases' />
        <field-sort-custom-order field='New Cases Per Million' />
        <field-sort-custom-order field='New Cases Smoothed' />
        <field-sort-custom-order field='New Cases Smoothed Per Million' />
        <field-sort-custom-order field='New Deaths' />
        <field-sort-custom-order field='New Deaths Per Million' />
        <field-sort-custom-order field='New Deaths Smoothed' />
        <field-sort-custom-order field='New Deaths Smoothed Per Million' />
        <field-sort-custom-order field='New Vaccinations' />
        <field-sort-custom-order field='New Vaccinations over Population' />
        <field-sort-custom-order field='New Vaccinations Smoothed' />
        <field-sort-custom-order field='New Vaccinations Smoothed Per Million' />
        <field-sort-custom-order field='Not Vaccinated over Population ' />
        <field-sort-custom-order field='People Fully Vaccinated' />
        <field-sort-custom-order field='People Fully Vaccinated Per Hundred' />
        <field-sort-custom-order field='People Vaccinated' />
        <field-sort-custom-order field='People Vaccinated over Population (delta)' />
        <field-sort-custom-order field='People Vaccinated Per Hundred' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Population Density' />
        <field-sort-custom-order field='Reproduction Rate' />
        <field-sort-custom-order field='Stringency Index' />
        <field-sort-custom-order field='Total Boosters' />
        <field-sort-custom-order field='Total Boosters Per Hundred' />
        <field-sort-custom-order field='Total Cases' />
        <field-sort-custom-order field='Total Cases Per Million' />
        <field-sort-custom-order field='Total Deaths' />
        <field-sort-custom-order field='Total Deaths Per Million' />
        <field-sort-custom-order field='Total Vaccinations' />
        <field-sort-custom-order field='Total Vaccinations Per Hundred' />
        <field-sort-custom-order field='Vaccinated over Population' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_293296961025843200' />
        <field-sort-custom-order field='Share of people partially vaccinated over population (copy)_966022156118286336' />
        <field-sort-custom-order field='Calculation_293296961027051521' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_vaccination .csv' id='country_vaccination .csv_DD1A0E81EAED4F8FB1517E61DE061BA4'>
            <properties context=''>
              <relation connection='textscan.0rwzjh50vjg5cg1b35npj0dwiegg' name='country_vaccination .csv' table='[country_vaccination #csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='boolean' name='Date Range Selected' ordinal='2' />
                  <column datatype='string' name='Excess Mortality' ordinal='3' />
                  <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
                  <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
                  <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
                  <column datatype='string' name='Extreme Poverty' ordinal='7' />
                  <column datatype='string' name='Female Smokers' ordinal='8' />
                  <column datatype='string' name='Hosp Patients' ordinal='9' />
                  <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
                  <column datatype='string' name='Icu Patients' ordinal='11' />
                  <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
                  <column datatype='string' name='Iso Code' ordinal='13' />
                  <column datatype='string' name='Location' ordinal='14' />
                  <column datatype='string' name='Location (copy)' ordinal='15' />
                  <column datatype='string' name='Location (geo)' ordinal='16' />
                  <column datatype='string' name='Male Smokers' ordinal='17' />
                  <column datatype='string' name='New Tests' ordinal='18' />
                  <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
                  <column datatype='string' name='New Tests Smoothed' ordinal='20' />
                  <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
                  <column datatype='string' name='Positive Rate' ordinal='22' />
                  <column datatype='string' name='Tests Per Case' ordinal='23' />
                  <column datatype='string' name='Tests Units' ordinal='24' />
                  <column datatype='string' name='Total Tests' ordinal='25' />
                  <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
                  <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
                  <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
                  <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
                  <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
                  <column datatype='real' name='Aged 65 Older' ordinal='31' />
                  <column datatype='real' name='Aged 70 Older' ordinal='32' />
                  <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
                  <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
                  <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
                  <column datatype='real' name='Gdp Per Capita' ordinal='36' />
                  <column datatype='real' name='Handwashing Facilities' ordinal='37' />
                  <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
                  <column datatype='real' name='Human Development Index' ordinal='39' />
                  <column datatype='real' name='Life Expectancy' ordinal='40' />
                  <column datatype='real' name='Median Age' ordinal='41' />
                  <column datatype='integer' name='New Cases' ordinal='42' />
                  <column datatype='real' name='New Cases Per Million' ordinal='43' />
                  <column datatype='real' name='New Cases Smoothed' ordinal='44' />
                  <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
                  <column datatype='integer' name='New Deaths' ordinal='46' />
                  <column datatype='real' name='New Deaths Per Million' ordinal='47' />
                  <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
                  <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
                  <column datatype='integer' name='New Vaccinations' ordinal='50' />
                  <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
                  <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
                  <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
                  <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
                  <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
                  <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
                  <column datatype='integer' name='People Vaccinated' ordinal='57' />
                  <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
                  <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
                  <column datatype='integer' name='Population' ordinal='60' />
                  <column datatype='real' name='Population Density' ordinal='61' />
                  <column datatype='real' name='Reproduction Rate' ordinal='62' />
                  <column datatype='real' name='Stringency Index' ordinal='63' />
                  <column datatype='integer' name='Total Boosters' ordinal='64' />
                  <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
                  <column datatype='integer' name='Total Cases' ordinal='66' />
                  <column datatype='real' name='Total Cases Per Million' ordinal='67' />
                  <column datatype='integer' name='Total Deaths' ordinal='68' />
                  <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
                  <column datatype='integer' name='Total Vaccinations' ordinal='70' />
                  <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
                  <column datatype='real' name='Vaccinated over Population' ordinal='72' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Countrywise Covid Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Location (geo):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;World&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;European Union&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Timor&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Vatican&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</rows>
        <cols>[federated.07cq11k1561q5i107jt4909eatdy].[sum:Total Deaths:qk]</cols>
      </table>
      <simple-id uuid='{84BBDCC5-36E3-4ADF-9315-399A0D8DD49E}' />
    </worksheet>
    <worksheet name='Dashboard 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Share of people partially vaccinated over population' datatype='real' name='[Calculation_293296961025843200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Fully Vaccinated]) / MAX([Population])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_293296961025843200]' derivation='User' name='[usr:Calculation_293296961025843200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2B1CF4F6-B6F7-4EF0-8A8C-048B77E27E7C}' />
    </worksheet>
    <worksheet name='KPI 1-People partially vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Share of people partially vaccinated over population' datatype='real' name='[Calculation_293296961025843200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Fully Vaccinated]) / MAX([Population])' />
            </column>
            <column caption='Share of people not vaccinated over population' datatype='real' name='[Calculation_293296961027051521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Calculation_293296961025843200]' />
            </column>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_293296961027051521]' derivation='User' name='[usr:Calculation_293296961027051521:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961027051521:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{47FF4C2D-105B-4B4B-8657-41B7AC793071}' />
    </worksheet>
    <worksheet name='KPI 2-People fully vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[People Vaccinated]' derivation='Max' name='[max:People Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Location (geo):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[max:People Vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#264d73' fontsize='12'><![CDATA[<[federated.07cq11k1561q5i107jt4909eatdy].[max:People Vaccinated:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A96BC5F5-A80C-4EB5-8209-5E2E8CB00784}' />
    </worksheet>
    <worksheet name='KPI 3 - Share of people not vaccinated over population'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Share of people partially vaccinated over population' datatype='real' name='[Calculation_293296961025843200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Fully Vaccinated]) / MAX([Population])' />
            </column>
            <column caption='Share of people not vaccinated over population' datatype='real' name='[Calculation_293296961027051521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Calculation_293296961025843200]' />
            </column>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_293296961027051521]' derivation='User' name='[usr:Calculation_293296961027051521:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Location (geo):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961027051521:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961027051521:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#264d73' fontsize='12'>&lt;</run>
                <run bold='true' fontcolor='#264d73' fontsize='12'>[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961027051521:qk]</run>
                <run bold='true' fontcolor='#264d73' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{40C03F27-7DF2-402D-A99B-9D937755E2B0}' />
    </worksheet>
    <worksheet name='Percentage of Fully VS Partially Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Share of people partially vaccinated over population' datatype='real' name='[Calculation_293296961025843200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Fully Vaccinated]) / MAX([Population])' />
            </column>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Share of people Fully vaccinated over population' datatype='real' name='[Share of people partially vaccinated over population (copy)_966022156118286336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Vaccinated]) / MAX([Population])' />
            </column>
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_293296961025843200]' derivation='User' name='[usr:Calculation_293296961025843200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Share of people partially vaccinated over population (copy)_966022156118286336]' derivation='User' name='[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Continent:nk]' />
              <groupfilter function='empty-level' member='[none:Continent:nk]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Location (geo):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;European Union&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;World&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Timor&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Vatican&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;International&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]' field-type='quantitative' fold='true' max='1.5141281852483153' min='-0.28315384060927068' range-type='fixed' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' field-type='quantitative' max='1.5141281852483153' min='-0.28315384060927068' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' value='center' />
            <format attr='text-format' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.07cq11k1561q5i107jt4909eatdy].[:Measure Names]' />
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='on' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.07cq11k1561q5i107jt4909eatdy].[:Measure Names]' />
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' />
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.07cq11k1561q5i107jt4909eatdy].[:Measure Names]' />
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='on' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]</rows>
        <cols>([federated.07cq11k1561q5i107jt4909eatdy].[usr:Share of people partially vaccinated over population (copy)_966022156118286336:qk] + [federated.07cq11k1561q5i107jt4909eatdy].[usr:Calculation_293296961025843200:qk])</cols>
      </table>
      <simple-id uuid='{0C5191E5-B16F-457F-9F12-657A6C48705D}' />
    </worksheet>
    <worksheet name='Report'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07cq11k1561q5i107jt4909eatdy].[yr:Date:ok]</rows>
        <cols>[federated.07cq11k1561q5i107jt4909eatdy].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{40B74A2E-2138-4FFE-8595-B97DA84DC95F}' />
    </worksheet>
    <worksheet name='Vaccinatd Over GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Gdp Per Capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[People Vaccinated Per Hundred]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gdp Per Capita]' derivation='Max' name='[max:Gdp Per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People Vaccinated Per Hundred]' derivation='Max' name='[max:People Vaccinated Per Hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[dy:Date:ok]'>
            <groupfilter function='level-members' level='[dy:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Continent:nk]' />
              <groupfilter function='empty-level' member='[none:Continent:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Location (geo):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[dy:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' value='Country'>
              <formatted-text>
                <run bold='true' fontsize='12'>Country</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' value='Date'>
              <formatted-text>
                <run>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' />
              <lod column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#00557f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07cq11k1561q5i107jt4909eatdy].[max:People Vaccinated Per Hundred:qk]</rows>
        <cols>[federated.07cq11k1561q5i107jt4909eatdy].[max:Gdp Per Capita:qk]</cols>
      </table>
      <simple-id uuid='{9D68CEF7-5F7E-4749-8005-BB71F1F46C1C}' />
    </worksheet>
    <worksheet name='Vaccinated Per Hundred -Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
            <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Date]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[People Vaccinated Per Hundred]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
            <column-instance column='[People Vaccinated Per Hundred]' derivation='Sum' name='[sum:People Vaccinated Per Hundred:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-01#</min>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' filter-group='5' included-values='in-range-or-null'>
            <min>#2020-01-01#</min>
            <max>#2021-10-25#</max>
          </filter>
          <filter class='categorical' column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Location (geo):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</column>
            <column>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[Longitude (generated)]' field-type='quantitative' max='92660859.901556924' min='20964147.043724522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[Latitude (generated)]' field-type='quantitative' max='13413796.366510201' min='-12415805.268628605' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07cq11k1561q5i107jt4909eatdy].[sum:People Vaccinated Per Hundred:qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.07cq11k1561q5i107jt4909eatdy].[sum:People Vaccinated Per Hundred:qk]' />
              <lod column='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' />
              <geometry column='[federated.07cq11k1561q5i107jt4909eatdy].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07cq11k1561q5i107jt4909eatdy].[Latitude (generated)]</rows>
        <cols>[federated.07cq11k1561q5i107jt4909eatdy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A87EF334-55EE-412E-9895-5FBE95A54381}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='1400' maxwidth='1120' minheight='1400' minwidth='1120' sizing-mode='fixed' />
      <datasources>
        <datasource caption='country_vaccination' name='federated.07cq11k1561q5i107jt4909eatdy' />
      </datasources>
      <datasource-dependencies datasource='federated.07cq11k1561q5i107jt4909eatdy'>
        <column caption='Filter Selected Date' datatype='date' name='[Calculation_942378258417516544]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='[Date]' />
        </column>
        <column-instance column='[Calculation_942378258417516544]' derivation='None' name='[none:Calculation_942378258417516544:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98858' id='14' param='vert' type-v2='layout-flow' w='98572' x='714' y='571'>
            <zone h='98858' id='12' type-v2='layout-basic' w='98572' x='714' y='571' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='18214' id='3' name='Percentage of Fully VS Partially Vaccinated' w='70714' x='6696' y='17000' />
        <zone h='29643' id='4' name='Vaccinated Per Hundred -Map' w='69375' x='6518' y='35429' />
        <zone h='28254' id='5' name='Vaccinatd Over GDP' w='81518' x='1161' y='85714' />
        <zone h='4841' id='6' name='Vaccinatd Over GDP' param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14286' x='36875' y='69206' />
        <zone h='10214' id='15' is-scaled='1' param='C:/Users/Brothers_Computer/Desktop/South Africa.png' type-v2='bitmap' w='102232' x='-893' y='6214' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98858' id='18' param='vert' type-v2='layout-flow' w='98572' x='714' y='571'>
                <zone fixed-size='143' h='10214' id='15' is-fixed='true' is-scaled='1' param='C:/Users/Brothers_Computer/Desktop/South Africa.png' type-v2='bitmap' w='102232' x='-893' y='6214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='255' h='18214' id='3' is-fixed='true' name='Percentage of Fully VS Partially Vaccinated' w='70714' x='6696' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29643' id='4' is-fixed='true' name='Vaccinated Per Hundred -Map' w='69375' x='6518' y='35429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4841' id='6' name='Vaccinatd Over GDP' param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14286' x='36875' y='69206'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28254' id='5' is-fixed='true' name='Vaccinatd Over GDP' w='81518' x='1161' y='85714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9BD74462-8653-47C9-8D34-CC5AD854DCF9}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Vaccinated Per Hundred -Map' id='1'>
                    <currentDeltas>
                      <worksheet name='Vaccinated Per Hundred -Map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[Latitude (generated)]' field-type='quantitative' max='22367197.170637876' min='-40015203.517670602' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.07cq11k1561q5i107jt4909eatdy].[Longitude (generated)]' field-type='quantitative' max='89568068.17525959' min='25150609.595714007' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0FCE9197-73B0-40C3-B00B-B5D092599509}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='KPI 1-People partially vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F3A9013-9DFF-4DA4-AADE-5B7BC01CE014}' />
    </window>
    <window class='worksheet' name='KPI 2-People fully vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{01D3C5B9-A649-423C-A958-6391E60AD255}' />
    </window>
    <window class='worksheet' name='KPI 3 - Share of people not vaccinated over population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D6954AD0-DB2E-4484-BE5C-D6394E228431}' />
    </window>
    <window class='worksheet' name='Percentage of Fully VS Partially Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]' type='filter' />
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.07cq11k1561q5i107jt4909eatdy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]</field>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B35AAED-6018-4EFC-9F72-070985CDA743}' />
    </window>
    <window class='worksheet' name='Vaccinated Per Hundred -Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]' type='filter' />
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.07cq11k1561q5i107jt4909eatdy].[sum:People Vaccinated Per Hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]</field>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9AAD070-A4D3-4E59-BF93-459091D26494}' />
    </window>
    <window class='worksheet' name='Vaccinatd Over GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' />
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]' type='filter' />
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Calculation_942378258417516544:qk]</field>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Continent:nk]</field>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A9A390C-0362-4CF6-8C92-B053A440D6CB}' />
    </window>
    <window class='worksheet' name='Countrywise Covid Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Location (geo):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0C27DFC-0E44-4863-900F-AE80EA06462E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Percentage of Fully VS Partially Vaccinated'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Vaccinatd Over GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccinated Per Hundred -Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{9031A883-48DB-4E27-B867-75A9575B68B1}' />
    </window>
    <window class='worksheet' name='Dashboard 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7DD36EA1-E3FF-4A93-855C-ABE8C2EBA526}' />
    </window>
    <window class='worksheet' name='Report'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[none:Date:qk]</field>
            <field>[federated.07cq11k1561q5i107jt4909eatdy].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{033A8904-E2A9-4C05-9FF6-77727A7B2AEB}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5CF347B5-1450-4197-B46B-E87FC2C8D490}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countrywise Covid Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      LYvujtkzE/8Pk7eP6xZeafIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='127'>
      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
    </thumbnail>
    <thumbnail height='24' name='KPI 1-People partially vaccinated' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADW0lEQVRYhe2YO0grWxSG/zNoAhGSKGIhKSy084UmEyNoIQaxsFDrFNNpJ0IQMXY2ggFJ
      KYL4bgQJsfMJio8qYEARRIlgJA9MRslMJnHPOsXlDvcSjyIEpjj5YYpZ6197f/zM3sX8IiLC
      XyxObwC9VQ5AbwC9VQ5AbwC9VQ5AbwC9VQ5AbwC9VQ5AbwC9VQ5AbwC9VdIAJEmCz+cDz/Nw
      u904Pj7+ozefz2N5eRm9vb3geR5jY2N4e3sDAMRiMbhcLrhcLszOzkKSJG3u8vISIyMjsNvt
      GBwcRDgc1noPDw/weDzgeR59fX0IhULfQ1MJtbS0RIuLiyTLMt3c3JAgCBSNRj/1bmxskNfr
      pdfXV2KM0dPTE8myTNlslqanpymfz1M2m6WFhQXa3NwkIqK7uzvyeDwUiUSIMUaJRIJSqRQR
      ESWTSRIEgQ4PD4kxRqIo0vPz87fMJQsgk8mQ1+ulRCKh1VZXV2l3d7fIK4oiTUxMfBoOY4wY
      Y9p7OBym9fV1IiIKBAIUDAY/3T8YDFIgEPgxd8mOgKIosFqtqK6u1mqtra0QRbHIG4/HUVtb
      C5vNVtTjOA4c9w+WJEnY29tDe3s7FEVBKpWC3W7/dP/7+3v09PT8mFuXS1CWZTDGkEwmoaoq
      JEmC3+/H2toaAEBVVczPzwMAfD4fmpub8fHxoc0UCgWoqoqjoyNMTk5ClmXkcjmk02koigJV
      VRGJRDA+Po5kMvklS8kCMBqNyGQySKfTWu36+hoWi6XIa7PZUFFRAbPZDI7jYDKZ4Ha7EY1G
      AQDn5+fwer0wmUzaTFVVFerq6mA0GlFZWQmO4+B0OmEwGPD+/o7GxkZwHAej0QiO49DS0oL6
      +nq8vLx8yV2yACwWC5qamrC1tYVcLofb21ucnJygo6OjyGu1WmE2m7G9vY1CoQBJknBwcIC2
      tjYoioLT01PtGPxXTqcTKysrSKVSUFUVV1dXMBgMqKmpAc/z2NnZwePjo/YFpNNpNDQ0fA3+
      41vjC2WzWZqZmSGHw0EDAwN0dnam9fb392lqaup/3rm5Oerq6qLu7m7y+/2kKArF43EaGhqi
      zs5O7fl3jjFGoVCI+vv7yeFwkCAIFIvFtDUvLi5oeHiYHA4HjY6OUiQS+Zb5F1H5r/Bfrd/g
      H4goJPIhQwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='26' name='KPI 2-People fully vaccinated' width='144'>
      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
      XOo/z7U/Sf4H2cTQjxzN2boAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='26' name='KPI 3 - Share of people not vaccinated over population' width='84'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage of Fully VS Partially Vaccinated' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Report' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      VjT/P/eXhQfYjFf3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccinatd Over GDP' width='192'>
      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
      xDYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vaccinated Per Hundred -Map' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
